# Generated by Django 4.0.4 on 2022-05-08 08:19

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import ovc_app.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserCardInformation',
            fields=[
                ('uCardIfoId', models.AutoField(primary_key=True, serialize=False)),
                ('cid', models.IntegerField()),
                ('uid', models.IntegerField()),
                ('heading', models.CharField(max_length=100)),
                ('subheading', models.CharField(max_length=100)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('website', models.CharField(max_length=100)),
                ('mobile', models.CharField(max_length=14)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.IntegerField()),
                ('totalAmount', models.IntegerField()),
                ('price_for_one', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='OrderHistory',
            fields=[
                ('oid', models.AutoField(primary_key=True, serialize=False)),
                ('ordstatus', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ucid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orderhistory', to='ovc_app.usercardinformation')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('mobile', models.CharField(max_length=14)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('last_login_time', models.DateTimeField(blank=True, null=True)),
                ('last_logout_time', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', ovc_app.manager.UserManager()),
            ],
        ),
    ]
